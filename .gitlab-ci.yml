include:
  - 'https://raw.githubusercontent.com/JuliaGPU/gitlab-ci/master/templates/v6.yml'

variables:
  CI_APT_INSTALL: 'libgomp1'
  NVIDIA_VISIBLE_DEVICES: 'all'
  NVIDIA_DRIVER_CAPABILITIES: 'compute,utility'


# Julia versions

# julia:1.5-debug:
#   extends:
#     - .julia:source
#     - .test
#   tags:
#     - nvidia
#   variables:
#     CI_CLONE_ARGS: '-b v1.5.0'
#     CI_BUILD_ARGS: 'BINARYBUILDER_LLVM_ASSERTS=1 debug'
#   allow_failure: true

julia:1.5:
  extends:
    - .julia:1.5
    - .test
  tags:
    - nvidia


# CUDA versions

# NOTE: we support those CUDA versions for which the latest cuDNN is available
#       https://developer.nvidia.com/rdp/cudnn-archive

# NOTE: we make sure to run all tests on all CUDA versions by setting the
#       CI_THOROUGH environment variable, and using a recent GPU.

cuda:10.2:
  extends:
    - .julia:1.5
    - .test
  image: ubuntu:bionic
  variables:
    CI_THOROUGH: 'true'
    JULIA_CUDA_VERSION: '10.2'
    JULIA_CUDA_USE_BINARYBUILDER: 'true'
  tags:
    - nvidia
    - latest
    - cuda_10.2

cuda:10.1:
  extends:
    - .julia:1.5
    - .test
  image: ubuntu:bionic
  variables:
    CI_THOROUGH: 'true'
    JULIA_CUDA_VERSION: '10.1'
    JULIA_CUDA_USE_BINARYBUILDER: 'true'
  tags:
    - nvidia
    - latest
    - cuda_10.1

cuda:10.0:
  extends:
    - .julia:1.5
    - .test
  image: ubuntu:bionic
  variables:
    JULIA_CUDA_VERSION: '10.0'
    JULIA_CUDA_USE_BINARYBUILDER: 'true'
  tags:
    - nvidia
    - latest
    - cuda_10.0

cuda:9.2:
  extends:
    - .julia:1.5
    - .test
  image: ubuntu:bionic
  variables:
    JULIA_CUDA_VERSION: '9.2'
    JULIA_CUDA_USE_BINARYBUILDER: 'true'
  tags:
    - nvidia
    - latest
    - cuda_9.2

# NOTE: CUDA 9.0 is broken

cuda:none:
  extends:
    - .julia:1.5
    - .test
  variables:
    NVIDIA_VISIBLE_DEVICES: ''
  script:
    - julia --project -e 'using Pkg;
                          Pkg.instantiate();
                          Pkg.build()'
    - julia --project -e 'using CUDA;
                          @assert !CUDA.functional(true)'


# hardware platforms

# platform:arm64:
#   extends:
#     - .julia:1.5
#     - .test
#   tags:
#     - nvidia-arm64
#   allow_failure: true


# special tests

pool:none:
  extends:
    - .julia:1.5
    - .test
  tags:
    - nvidia
  variables:
    JULIA_CUDA_MEMORY_POOL: 'none'

pool:simple:
  extends:
    - .julia:1.5
    - .test
  tags:
    - nvidia
  variables:
    JULIA_CUDA_MEMORY_POOL: 'simple'

pool:split:
  extends:
    - .julia:1.5
    - .test
  tags:
    - nvidia
  variables:
    JULIA_CUDA_MEMORY_POOL: 'split'
  allow_failure: true

debug:
  extends:
    - .julia:1.5
    - .test
  tags:
    - nvidia
  script:
    - julia --project -g2 -e 'using Pkg;
                              Pkg.instantiate();
                              Pkg.build();
                              Pkg.test(; coverage=true);'


# other tasks

coverage:
  extends:
    - .julia:1.5
    - .coverage

documentation:
  extends:
    - .julia:1.5
    - .documentation
  tags:
    - nvidia

pages:
  stage: deploy
  script:
    - mv docs/build public
  artifacts:
    paths:
    - public
  only:
    - master


# benchmarks

.benchmark:
  stage: post
  extends:
    - .julia:1.5
  interruptible: true
  tags:
    - nvidia-benchmark
  variables:
    JULIA_LOAD_PATH: "$CI_PROJECT_DIR:$CI_PROJECT_DIR/perf::"
    CODESPEED_ENVIRONMENT: "$CI_RUNNER_DESCRIPTION"
    CODESPEED_PROJECT: "$CI_PROJECT_NAME"
    CODESPEED_BRANCH: "$CI_COMMIT_REF_NAME"
    CODESPEED_COMMIT: "$CI_COMMIT_SHA"
  script:
    - julia --project --color=yes -e 'using Pkg;
                                      Pkg.instantiate()'
    - julia --project=perf/ --color=yes -e 'using Pkg;
                                            Pkg.instantiate()'
    - julia --project=perf/ --color=yes perf/runbenchmarks.jl

benchmark:1.4:
  extends:
    - .julia:1.4
    - .benchmark
  tags:
    - nvidia-benchmark
  variables:
    CODESPEED_EXECUTABLE: "Julia 1.4"
  allow_failure: true

benchmark:1.5:
  extends:
    - .julia:1.5
    - .benchmark
  tags:
    - nvidia-benchmark
  variables:
    CODESPEED_EXECUTABLE: "Julia 1.5"
  allow_failure: true
